// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')
require('chromedriver');

describe('Successful login', function() {
  this.timeout(120000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Successful login', async function() {
    await driver.get("https://merchant-dashboard.herokuapp.com/")
    await driver.manage().window().setRect(974, 696)
    await driver.findElement(By.id("normal_login_username")).click()
    await driver.findElement(By.id("normal_login_username")).sendKeys("merchant")
    await driver.findElement(By.id("normal_login_password")).sendKeys("nova")
    await driver.findElement(By.css(".ant-btn > span")).click()
    {
      const elements = await driver.findElements(By.css(".notification-bell__bow"))
      assert(elements.length)
    }
    await driver.close()
  })
})

describe('Wrong password test', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Wrong password test', async function() {
    await driver.get("https://merchant-dashboard.herokuapp.com/")
    await driver.manage().window().setRect(974, 696)
    await driver.findElement(By.id("normal_login_username")).click()
    await driver.findElement(By.id("normal_login_username")).sendKeys("merchant")
    await driver.findElement(By.id("normal_login_password")).sendKeys("123123412")
    await driver.findElement(By.css(".ant-btn > span")).click()
    await driver.wait(until.elementLocated(By.css(".ant-message-custom-content")), 30000)
    await driver.close()
  })
})

describe('Wrong username test', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Wrong username test', async function() {
    await driver.get("https://merchant-dashboard.herokuapp.com/")
    await driver.manage().window().setRect(974, 696)
    await driver.findElement(By.id("normal_login_username")).click()
    await driver.findElement(By.id("normal_login_username")).sendKeys("merchant1")
    await driver.findElement(By.id("normal_login_password")).sendKeys("nova")
    await driver.findElement(By.css(".ant-btn > span")).click()
    await driver.wait(until.elementLocated(By.css(".ant-message-custom-content")), 30000)
    await driver.close()
  })
})

/*describe('Employee search test', function() {
    this.timeout(30000)
    let driver
    let vars
    beforeEach(async function() {
      driver = await new Builder().forBrowser('chrome').build()
      vars = {}
    })
    afterEach(async function() {
      await driver.quit();
    })
    it('Employee search test', async function() {
      await driver.get("https://merchant-dashboard.herokuapp.com/")
      await driver.manage().window().setRect({height:900, width:1440})
      await driver.findElement(By.id("normal_login_username")).click()
      await driver.findElement(By.id("normal_login_username")).sendKeys("merchant")
      await driver.findElement(By.id("normal_login_password")).click()
      await driver.findElement(By.id("normal_login_password")).sendKeys("nova")
      await driver.findElement(By.css(".ant-btn > span")).click()
      await driver.wait(until.elementIsVisible(await driver.findElement(By.id("imeKorisnika"))), 30000)
      await driver.wait(until.elementLocated(By.xpath("/html/body/div/div/section/aside/div/ul/li[4]/a/span[2]")), 30000)
      await driver.findElement(By.xpath("/html/body/div/div/section/aside/div/ul/li[4]/a/span[2]")).click()
      await driver.findElement(By.css(".ant-table-cell:nth-child(3) .ant-table-filter-trigger")).click()
      await driver.findElement(By.css(".ant-input")).sendKeys("dselimovic1")
      await driver.findElement(By.css(".ant-input")).sendKeys(Key.ENTER)
      {
        const elements = await driver.findElements(By.linkText("Denis"))
        assert(elements.length)
      }
      {
        const elements = await driver.findElements(By.linkText("dselimovic1@etf.unsa.ba"))
        assert(elements.length)
      }
      {
        const elements = await driver.findElements(By.linkText("aturkusic1@etf.unsa.ba"))
        assert(!elements.length)
      }
      {
        const elements = await driver.findElements(By.linkText("Jasmin"))
        assert(!elements.length)
      }
      await driver.close()
    })
  })*/
/*describe('Show diagram test', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Show diagram test', async function() {
    await driver.get("localhost:3000")
    await driver.manage().window().setRect({height:768, width:1366})
    await driver.findElement(By.id("normal_login_username")).click()
    await driver.findElement(By.id("normal_login_username")).sendKeys("merchant")
    await driver.findElement(By.id("forma")).click()
    await driver.findElement(By.css(".ant-input-password")).click()
    await driver.findElement(By.id("normal_login_password")).sendKeys("nova")
    await driver.findElement(By.css(".ant-btn")).click()
    await driver.wait(until.elementLocated(By.id("imeKorisnika")), 30000)
    await driver.findElement(By.id("statistics")).click()
    await driver.wait(until.elementLocated(By.id("dasdasdas")), 30000)
    await driver.findElement(By.id("rangePickerStatistics")).click()
    await driver.findElement(By.id("rangePickerStatistics")).sendKeys("01.04.2020")
    await driver.findElement(By.css(".ant-picker-input-active > input")).sendKeys(Key.ENTER)
    await driver.findElement(By.css(".ant-picker-input-active > input")).sendKeys("15.05.2020")
    await driver.findElement(By.css(".ant-picker-input-active > input")).sendKeys(Key.ENTER)
    await driver.findElement(By.id("rc_select_2")).click()
    await driver.findElement(By.id("rc_select_2")).sendKeys("gavr")
    await driver.findElement(By.id("rc_select_2")).sendKeys(Key.ENTER)
    {
      const elements = await driver.findElements(By.css(".chartjs-render-monitor"))
      assert(elements.length)
    }
    await driver.close()
  })
})*/